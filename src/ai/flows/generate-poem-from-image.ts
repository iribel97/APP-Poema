// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates a poem based on the content of an uploaded image.
 *
 * - generatePoemFromImage - A function that handles the poem generation process.
 * - GeneratePoemFromImageInput - The input type for the generatePoemFromImage function.
 * - GeneratePoemFromImageOutput - The return type for the generatePoemFromImage function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GeneratePoemFromImageInputSchema = z.object({
  photoUrl: z.string().describe('The URL of the uploaded photo.'),
});

export type GeneratePoemFromImageInput = z.infer<typeof GeneratePoemFromImageInputSchema>;

const GeneratePoemFromImageOutputSchema = z.object({
  poem: z.string().describe('The generated poem based on the image content.'),
});

export type GeneratePoemFromImageOutput = z.infer<typeof GeneratePoemFromImageOutputSchema>;

export async function generatePoemFromImage(input: GeneratePoemFromImageInput): Promise<GeneratePoemFromImageOutput> {
  return generatePoemFromImageFlow(input);
}

const poemPrompt = ai.definePrompt({
  name: 'poemPrompt',
  input: {
    schema: z.object({
      photoUrl: z.string().describe('The URL of the uploaded photo.'),
    }),
  },
  output: {
    schema: z.object({
      poem: z.string().describe('A poem inspired by the image.'),
    }),
  },
  prompt: `You are a poet. Generate a poem inspired by the content of the following image.

Image: {{media url=photoUrl}}

Poem:
`,
});

const generatePoemFromImageFlow = ai.defineFlow<
  typeof GeneratePoemFromImageInputSchema,
  typeof GeneratePoemFromImageOutputSchema
>({
  name: 'generatePoemFromImageFlow',
  inputSchema: GeneratePoemFromImageInputSchema,
  outputSchema: GeneratePoemFromImageOutputSchema,
},
async input => {
  const {output} = await poemPrompt(input);
  return output!;
});
